{"version":3,"sources":["Inventory/inventoryItem.js","Inventory/Bag.js","Inventory/Inventory.js","App.js","index.js"],"names":["InventoryItem","props","ListItem","item","name","Button","variant","color","onClick","addItem","id","showInfo","Bag","weight","items","reduce","totalWeight","itemsList","map","ind","removeItem","Slider","disabled","max","value","toFixed","List","Inventory","useState","setItems","selectedItem","selectItem","showModal","setModalOpen","bagItems","setBagItems","useEffect","fetch","then","result","json","data","Modal","open","onClose","desc","Grid","container","itemInd","tempBag","splice","itemId","console","log","App","className","rootElement","document","getElementById","createRoot","render"],"mappings":"kNAGe,SAASA,EAAcC,GACpC,OACE,eAACC,EAAA,EAAQ,WACND,EAAME,KAAKC,KACZ,cAACC,EAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAAS,WACPP,EAAMQ,QAAQR,EAAME,KAAKO,GAC3B,EAAE,iBAIJ,cAACL,EAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,YACNC,QAAS,WACPP,EAAMU,SAASV,EAAME,KAAKO,GAC5B,EAAE,oBAMV,C,oBCxBe,SAASE,EAAIX,GAC1B,IAAMY,EAASZ,EAAMa,MAAMC,QAAO,SAACC,EAAab,GAC9C,OAAOa,EAAcb,EAAKU,MAC5B,GAAG,GAEGI,EAAYhB,EAAMa,MAAMI,KAAI,SAACf,EAAMgB,GAAG,OAC1C,cAACjB,EAAA,EAAQ,CAEPM,QAAS,WACPP,EAAMmB,WAAWD,EACnB,EAAE,SAEDhB,EAAKC,MALDe,EAMI,IAGb,OACE,gCACE,cAACE,EAAA,EAAM,CAACC,UAAU,EAAMC,IAAK,GAAIC,MAAOX,IACxC,iDAAoBA,EAAOY,QAAQ,GAAE,UACrC,cAACC,EAAA,EAAI,UAAET,MAGb,C,0BCpBe,SAASU,IACtB,MAA0BC,mBAAS,IAAG,mBAA/Bd,EAAK,KAAEe,EAAQ,KACtB,EAAmCD,mBAAS,CAAC,GAAE,mBAAxCE,EAAY,KAAEC,EAAU,KAC/B,EAAkCH,oBAAS,GAAM,mBAA1CI,EAAS,KAAEC,EAAY,KAC9B,EAAgCL,mBAAS,IAAG,mBAArCM,EAAQ,KAAEC,EAAW,KAG5BC,qBAAU,WACRC,MAAM,mBACHC,MAAK,SAACC,GAAM,OAAKA,EAAOC,MAAM,IAC9BF,MAAK,SAACG,GACLZ,EAASY,EACX,GACJ,GAAG,IAIH,IAAMxB,EAAYH,EAAMI,KAAI,SAACf,GAAI,OAC/B,cAACH,EAAa,CAEZG,KAAMA,EACNM,QAASA,EACTE,SAAUA,GAHLR,EAAKO,GAIV,IAGJ,OACE,gCACE,cAACgC,EAAA,EAAK,CACJC,KAAMX,EACNY,QAAS,WACPX,GAAa,EACf,EAAE,SAEF,sBAAKvB,GAAG,UAAS,UACf,6BAAKoB,EAAa1B,OAClB,4BAAI0B,EAAae,OACjB,yCAAYf,EAAajB,eAG7B,eAACiC,EAAA,EAAI,CAACC,WAAS,YACb,eAACD,EAAA,EAAI,WACH,uCACA,cAACpB,EAAA,EAAI,UAAET,OAET,eAAC6B,EAAA,EAAI,WACH,qCACA,cAAClC,EAAG,CAACE,MAAOoB,EAAUd,WAM9B,SAAoB4B,GAClB,IAAMC,EAAO,YAAOf,GAEpBe,EAAQC,OAAOF,EAAS,GAExBb,EAAYc,EACd,aAEA,SAAStC,EAASwC,GAEhBpB,EAAWjB,EAAMqC,IAEjBlB,GAAa,EACf,CAEA,SAASxB,EAAQ0C,GACfhB,EAAY,GAAD,mBAAKD,GAAQ,CAAEpB,EAAMqC,MAChCC,QAAQC,IAAInB,EACd,CACF,CC3Ee,SAASoB,IACtB,OACE,qBAAKC,UAAU,MAAK,SAClB,cAAC5B,EAAS,KAGhB,CCJA,IAAM6B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACN,EAAG,M","file":"static/js/main.ad8ed324.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, ListItem } from \"@material-ui/core\";\r\n\r\nexport default function InventoryItem(props) {\r\n  return (\r\n    <ListItem>\r\n      {props.item.name}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.addItem(props.item.id);\r\n        }}\r\n      >\r\n        Add\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.showInfo(props.item.id);\r\n        }}\r\n      >\r\n        Info\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListItem, List, Slider } from \"@material-ui/core\";\r\n\r\nexport default function Bag(props) {\r\n  const weight = props.items.reduce((totalWeight, item) => {\r\n    return totalWeight + item.weight;\r\n  }, 0);\r\n\r\n  const itemsList = props.items.map((item, ind) => (\r\n    <ListItem\r\n      key={ind}\r\n      onClick={() => {\r\n        props.removeItem(ind);\r\n      }}\r\n    >\r\n      {item.name}\r\n    </ListItem>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <Slider disabled={true} max={15} value={weight} />\r\n      <div>Total Weight: {weight.toFixed(2)} nts</div>\r\n      <List>{itemsList}</List>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InventoryItem from \"./inventoryItem\";\r\nimport Bag from \"./Bag\";\r\nimport { List, Modal, Grid } from \"@material-ui/core\";\r\nimport \"./inventory.css\";\r\n\r\nexport default function Inventory() {\r\n  const [items, setItems] = useState([]);\r\n  const [selectedItem, selectItem] = useState({});\r\n  const [showModal, setModalOpen] = useState(false);\r\n  const [bagItems, setBagItems] = useState([]);\r\n\r\n  //on page load, load data\r\n  useEffect(() => {\r\n    fetch(\"data/items.json\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        setItems(data);\r\n      });\r\n  }, []);\r\n\r\n  //Create our inventory list\r\n\r\n  const itemsList = items.map((item) => (\r\n    <InventoryItem\r\n      key={item.id}\r\n      item={item}\r\n      addItem={addItem}\r\n      showInfo={showInfo}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={showModal}\r\n        onClose={() => {\r\n          setModalOpen(false);\r\n        }}\r\n      >\r\n        <div id=\"infoBox\">\r\n          <h3>{selectedItem.name}</h3>\r\n          <p>{selectedItem.desc}</p>\r\n          <p>Weight: {selectedItem.weight}</p>\r\n        </div>\r\n      </Modal>\r\n      <Grid container>\r\n        <Grid>\r\n          <h2>Items</h2>\r\n          <List>{itemsList}</List>\r\n        </Grid>\r\n        <Grid>\r\n          <h2>Bag</h2>\r\n          <Bag items={bagItems} removeItem={removeItem} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n\r\n  function removeItem(itemInd) {\r\n    const tempBag = [...bagItems];\r\n    //remove from the copied array the item at itemInd\r\n    tempBag.splice(itemInd, 1);\r\n    //set that as our new array\r\n    setBagItems(tempBag);\r\n  }\r\n\r\n  function showInfo(itemId) {\r\n    //select the item to be shown -> put info into a variable\r\n    selectItem(items[itemId]);\r\n    //show the info\r\n    setModalOpen(true);\r\n  }\r\n\r\n  function addItem(itemId) {\r\n    setBagItems([...bagItems, items[itemId]]);\r\n    console.log(bagItems);\r\n  }\r\n}\r\n","import \"./styles.css\";\nimport Inventory from \"./Inventory/Inventory\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Inventory />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}